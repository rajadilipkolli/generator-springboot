name: Generator SpringBoot

on:
  push:
    branches:
      - '**'

jobs:
  publish:
    name: npm publish
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-ubuntu]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Check if version changed
        id: version-check
        run: |
          if [ ${{ github.ref == 'refs/heads/main' }} ]; then
            previous_version=$(git show HEAD:package.json | jq -r .version)
            current_version=$(jq -r .version package.json)
      
            if [ "$previous_version" != "$current_version" ]; then
              echo "Version changed. Publishing..."
              echo "VERSION_CHANGED=true" >> $GITHUB_ENV
            else
              echo "Version unchanged. Skipping publish."
              echo "VERSION_CHANGED=false" >> $GITHUB_ENV
            fi
          else
            echo "Not on the main branch. Skipping publish."
            echo "VERSION_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Build and Publish on version change
        if: env.VERSION_CHANGED == 'true'
        run: |
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

# Define separate jobs for each matrix combination
  build-windows:
    needs: []
    strategy:
      matrix:
        os: [windows-latest]
        node_version: [16.x, 18.x, 20.x]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - run: npm install

      - run: npm test
        env:
          CI: true

  build-macos:
    needs: []
    strategy:
      matrix:
        os: [macos-latest]
        node_version: [16.x, 18.x, 20.x]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - run: npm install

      - run: npm test
        env:
          CI: true

  build-ubuntu:
    needs: []
    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [16.x, 18.x, 20.x]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
      - run: npm install
      - run: npm test
        env:
          CI: true
