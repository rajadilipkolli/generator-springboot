name: Generator SpringBoot
on:
  push:
    branches:
      - '**'
jobs:
  build:
    name: npm test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        node_version: [16.x, 18.x, 20.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
      - run: npm install
      - run: npm test
        env:
          CI: true
      - name: Check if version changed
        id: version-check
        run: |
          if [ "${GITHUB_REF#refs/heads/}" == "main" ]; then
            previous_version=$(git show HEAD:package.json | jq -r .version)
            current_version=$(jq -r .version package.json)
  
            if [ "$previous_version" != "$current_version" ]; then
              echo "Version changed. Publishing..."
              echo "::set-output name=version_changed::true"
            else
              echo "Version unchanged. Skipping publish."
              echo "::set-output name=version_changed::false"
            fi
          else
            echo "Not on the main branch. Skipping publish."
            echo "::set-output name=version_changed::false"
          fi
      - name: Build package on version change
        if: steps.version-check.outputs.version_changed == 'true'
        run: npm run build
      - name: Publish package on version change
        if: steps.version-check.outputs.version_changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
